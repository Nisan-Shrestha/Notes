// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid()) @db.Uuid
  email          String   @unique
  name           String?
  username       String   @unique
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  notes      Note[]
  categories Category[]
}

model Note {
  id        String   @id @default(uuid()) @db.Uuid
  title     String
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.Uuid

  categories NoteCategory[]
}

model Category {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String @db.Uuid

  notes NoteCategory[]

  @@unique([name, ownerId])
}

model NoteCategory {
  note       Note     @relation(fields: [noteId], references: [id], onDelete: Cascade)
  noteId     String   @db.Uuid
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @db.Uuid

  @@id([noteId, categoryId])
}
